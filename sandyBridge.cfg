
//=========== PROCESSOR =============
NUMBER_OF_PROCESSORS = 1; 
SIZE_OF_L1_CACHES_ARRAY = 1;
SIZE_OF_L2_CACHES_ARRAY = 1;    
SIZE_OF_LLC_CACHES_ARRAY = 1;   

//=========== PIPELINE STAGES =============
FETCH_WIDTH = 6;
DECODE_WIDTH = 5;
RENAME_WIDTH = 5;
DISPATCH_WIDTH = 6;
EXECUTE_WIDTH = 8;
COMMIT_WIDTH = 4;
//=============================
FETCH_LATENCY = 3;
DECODE_LATENCY = 3;
RENAME_LATENCY = 3;
DISPATCH_LATENCY = 2;
EXECUTE_LATENCY = 0;
COMMIT_LATENCY = 3;
//========= FUNCTIONAL UNITS RELATED=========
//INTEGER ALU
LATENCY_INTEGER_ALU = 1;
WAIT_NEXT_INT_ALU = 1;
INTEGER_ALU = 3;
//INTEGER MUL
LATENCY_INTEGER_MUL = 3;
WAIT_NEXT_INT_MUL = 1;
INTEGER_MUL = 1;
//INTEGER DIV
LATENCY_INTEGER_DIV = 32;
WAIT_NEXT_INT_DIV = 32;
INTEGER_DIV = 1;

//QTDE_INTEGER_FU (INTEGER_ALU+INTEGER_MUL+INTEGER_DIV)

//FP ULAS LATENCY 
//FLOATING POINT DIV
LATENCY_FP_DIV = 10;
WAIT_NEXT_FP_DIV = 10;
FP_DIV = 1;
//FLOATING POINT MUL
LATENCY_FP_MUL = 5;
WAIT_NEXT_FP_MUL = 1;
FP_MUL = 1;
//FLOATING POINT ALU
LATENCY_FP_ALU = 3;
WAIT_NEXT_FP_ALU = 1;
FP_ALU = 1;

//QTDE_FP_FU (FP_ALU+FP_MUL+FP_DIV)
//=====================

//=====================
//MEMORY FU
//=====================
//Load Units
LOAD_UNIT = 2;
WAIT_NEXT_MEM_LOAD = 1;
LATENCY_MEM_LOAD = 1;
//Store Units
STORE_UNIT = 1;
WAIT_NEXT_MEM_STORE = 1;
LATENCY_MEM_STORE = 1;

//QTDE_MEMORY_FU (LOAD_UNIT+STORE_UNIT)
//Parallel Loads
PARALLEL_LOADS = 2;
PARALLEL_STORES = 1;

//======================
///UNIFIED FUS
//PROCESSOR BUFFERS SIZE
FETCH_BUFFER = 18;
DECODE_BUFFER = 28;
RAT_SIZE = 260;
ROB_SIZE = 168;
UNIFIED_RS = 54;
//MOB
MOB_READ = 64;
MOB_WRITE = 36;


//===========BRANCH PREDICTOR=============
BTB_ENTRIES = 4096;
BTB_WAYS = 4;
//COUNTERS
TWO_BIT = 0;
PIECEWISE = 1;


BTB_MISS_PENALITY = 5;
MISSPREDICTION_PENALITY = 10;
N = 128;
M = 128;
H = 43;
//N 64
//M 32
//H 15
//THETA ((2.14*(H)) + 20.58)
//===========END BRANCH PREDICTOR=============
//*************** DEFINES CACHE *****************
//=====================CACHES=======================
//ATTR COMMON
LINE_SIZE = 64;
CACHE_LEVELS = 3;
INSTRUCTION_ENABLED = 1;
OFFSET_SIZE = 6;
//==================== LEVEL 1 =====================
//https://www.intel.com/content/dam/www/public/us/en/documents/manuals/64-ia-32-architectures-optimization-manual.pdf
//Valores retirados do manual de otimização
//D$
//L1_DATA_SIZE = 32*1024;
L1_DATA_ASSOCIATIVITY  = 8;
L1_DATA_LATENCY = 3;
//L1_DATA_SETS (L1_DATA_SIZE/LINE_SIZE)/L1_DATA_ASSOCIATIVITY
//I$
//L1_INST_SIZE 32*1024
L1_INST_ASSOCIATIVITY = 8;
L1_INST_LATENCY = 3;
//L1_INST_SETS (L1_INST_SIZE/LINE_SIZE)/L1_INST_ASSOCIATIVITY
//==================== LEVEL 1 =====================
//==================== LEVEL 2 =====================
//L2_SIZE 256*1024
L2_ASSOCIATIVITY = 4;
L2_LATENCY = 6;
//L2_SETS (L2_SIZE/LINE_SIZE)/L2_ASSOCIATIVITY
//==================== LEVEL 2 =====================
//==================== LLC     =====================
//LLC_SIZE 4*(1024*2014)
LLC_ASSOCIATIVITY = 20;
LLC_LATENCY = 44;
//LLC_SETS (LLC_SIZE/LINE_SIZE)/LLC_ASSOCIATIVITY
//==================== LLC     =====================
//=====================CACHES=======================

//=====================RAM=======================
RAM_LATENCY = 350;
//RAM_SIZE 4 * (1024*2014) * 1024
PARALLEL_LIM_ACTIVE = 1;
MAX_PARALLEL_REQUESTS = 8;
//=====================RAM=======================
//=====================PREFETCHER=======================
PREFETCHER_ACTIVE = 1;
STRIDE_TABLE_SIZE = 16;
DEGREE = 1;
DISTANCE = 4;
//active prefetchers
STRIDE = 1;
//=====================PREFETCHER=======================

//=====================MEMORY DESAMBIGUATION=======================
DESAMBIGUATION_ENABLED = 1;
//PERFECT
PERFECT = 0;
//HASHED
HASHED = 1;  //refatorar para não depender desse DEFINE
LOAD_HASH_SIZE = 512;
STORE_HASH_SIZE = 512;
DESAMBIGUATION_BLOCK_SIZE = 4;
//SOLVING ADDRESS TO ADDRESS
ADDRESS_TO_ADDRESS = 1;
//REGISTER FORWARD ON EXECUTION
REGISTER_FORWARD = 1;
//=====================MEMORY DESAMBIGUATION=======================

//=====================MEMORY CONFIGURATION=======================
ARRAY = 0; //nunca usado
CIRCULAR_BUFFER = 1; //nunca usado

//=====================MEMORY CONFIGURATION=======================

//===================== EMC =======================================
EMC_ACTIVE = 0; //nunca usados
EMC_PARALLEL_ACTIVATE = 1;
EMC_ROB_HEAD = 1;
ALL_UOPS = 0;
LOCKING_COMMIT = 1;
//===================== EMC =======================================
//WIDHTs
EMC_DISPATCH_WIDTH = 2;
EMC_EXECUTE_WIDTH = 2;
EMC_COMMIT_WIDTH = 2;
//Latencies
EMC_DISPATCH_LATENCY = 1;
EMC_EXECUTE_LATENCY = 0;
EMC_COMMIT_LATENCY = 1;

//pipelines
EMC_WAIT_NEXT_INTEGER_ALU = 1;
EMC_WAIT_NEXT_INTEGER_MUL = 1;
EMC_WAIT_NEXT_INTEGER_DIV = 32;
EMC_WAIT_NEXT_FP_ALU = 1;
EMC_WAIT_NEXT_FP_MUL = 1;
EMC_WAIT_NEXT_FP_DIV = 10;
EMC_WAIT_NEXT_MEM_LOAD = 1;
EMC_WAIT_NEXT_MEM_STORE = 1;
//Functional Units QTDE
EMC_INTEGER_ALU = 2;
EMC_INTEGER_MUL = 1;
EMC_INTEGER_DIV = 1;
EMC_FP_ALU = 1;
EMC_FP_MUL = 1;
EMC_FP_DIV = 1;
//Latencies
EMC_INTEGER_LATENCY_ALU = 1;
EMC_INTEGER_LATENCY_MUL = 3;
EMC_INTEGER_LATENCY_DIV = 32;
//Latencies FP
EMC_FP_LATENCY_ALU = 3;
EMC_FP_LATENCY_MUL = 5;
EMC_FP_LATENCY_DIV = 10;
//Structures
EMC_UNIFIED_RS = 8;
EMC_UOP_BUFFER = 16;
EMC_REGISTERS = 16;
EMC_LSQ_SIZE = 16;
//EMC CACHE
EMC_CACHE_SIZE = 4096;
EMC_CACHE_ASSOCIATIVITY = 4;
EMC_CACHE_LATENCY = 1;
 //MC_CACHE_SETS (EMC_CACHE_SIZE/LINE_SIZE)/EMC_CACHE_ASSOCIATIVITY
//Access Predictor
MACT_SIZE = 256;
MACT_THRESHOLD = 2;
MACT_SHIFT = 4;
//===================== EMC =======================================
//=====================CHECKS=======================
SANITY_CHECK = 0;
HEARTBEAT = 1;
HEARTBEAT_CLOCKS = 10000000;
//==========DEBUGS
DEBUG = 0;
EMC_ACTIVE_DEBUG = 0;

FETCH_DEBUG = 0;
DECODE_DEBUG = 0;
RENAME_DEBUG = 0;
DISPATCH_DEBUG = 0;
EXECUTE_DEBUG = 0;
MOB_DEBUG = 0;
COMMIT_DEBUG = 0;
CACHE_MANAGER_DEBUG = 0;
MEM_CONTROLLER_DEBUG = 0;
//EMC Debugs
EMC_DEBUG = 1;
EMC_DISPATCH_DEBUG = 0;
EMC_EXECUTE_DEBUG = 1;
EMC_LSQ_DEBUG = 1;
EMC_COMMIT_DEBUG = 1;

PERIODIC_CHECK = 0;
CLOCKS_TO_CHECK = 500;
WAIT_CYCLE = 0;